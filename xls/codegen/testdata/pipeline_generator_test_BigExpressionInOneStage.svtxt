module x_plus_y_plus_z(
  input wire clk,
  input wire [31:0] a,
  input wire [31:0] b,
  input wire [31:0] c,
  input wire [31:0] d,
  output wire [31:0] out
);
  // ===== Pipe stage 0:

  // Registers for pipe stage 0:
  logic [31:0] p0_a;
  logic [31:0] p0_b;
  logic [31:0] p0_c;
  logic [31:0] p0_d;
  always_ff @ (posedge clk) begin
    p0_a <= a;
    p0_b <= b;
    p0_c <= c;
    p0_d <= d;
  end

  // ===== Pipe stage 1:
  wire [31:0] p1_add_24_comb;
  wire [31:0] p1_xor_26_comb;
  wire [31:0] p1_add_27_comb;
  wire [31:0] p1_sub_28_comb;
  wire [31:0] p1_add_29_comb;
  wire [31:0] p1_sub_30_comb;
  assign p1_add_24_comb = p0_a + p0_b;
  assign p1_xor_26_comb = p0_a ^ p1_add_24_comb;
  assign p1_add_27_comb = ~p1_add_24_comb + p0_c;
  assign p1_sub_28_comb = p1_xor_26_comb - p1_add_27_comb;
  assign p1_add_29_comb = p0_d + p1_xor_26_comb;
  assign p1_sub_30_comb = p1_sub_28_comb - p1_add_29_comb;

  // Registers for pipe stage 1:
  logic [31:0] p1_sub_30;
  always_ff @ (posedge clk) begin
    p1_sub_30 <= p1_sub_30_comb;
  end
  assign out = p1_sub_30;
endmodule
