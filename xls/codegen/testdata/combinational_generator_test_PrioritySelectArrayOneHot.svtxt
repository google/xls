module main(
  input wire p,
  input wire [63:0] x,
  input wire [63:0] y,
  input wire [63:0] d,
  output wire [63:0] out
);
  wire [15:0] x_unflattened[4];
  assign x_unflattened[0] = x[15:0];
  assign x_unflattened[1] = x[31:16];
  assign x_unflattened[2] = x[47:32];
  assign x_unflattened[3] = x[63:48];
  wire [15:0] y_unflattened[4];
  assign y_unflattened[0] = y[15:0];
  assign y_unflattened[1] = y[31:16];
  assign y_unflattened[2] = y[47:32];
  assign y_unflattened[3] = y[63:48];
  wire [15:0] d_unflattened[4];
  assign d_unflattened[0] = d[15:0];
  assign d_unflattened[1] = d[31:16];
  assign d_unflattened[2] = d[47:32];
  assign d_unflattened[3] = d[63:48];
  wire [1:0] concat_27;
  wire [2:0] one_hot_18;
  wire [15:0] one_hot_sel_23[4];
  wire eq_20;
  assign concat_27 = {~p, p};
  assign one_hot_18 = {concat_27[1:0] == 2'h0, concat_27[1] && !concat_27[0], concat_27[0]};
  assign one_hot_sel_23[0] = x_unflattened[0] & {16{concat_27[0]}} | y_unflattened[0] & {16{concat_27[1]}};
  assign one_hot_sel_23[1] = x_unflattened[1] & {16{concat_27[0]}} | y_unflattened[1] & {16{concat_27[1]}};
  assign one_hot_sel_23[2] = x_unflattened[2] & {16{concat_27[0]}} | y_unflattened[2] & {16{concat_27[1]}};
  assign one_hot_sel_23[3] = x_unflattened[3] & {16{concat_27[0]}} | y_unflattened[3] & {16{concat_27[1]}};
  assign eq_20 = concat_27 == one_hot_18[1:0];
  assign out = {one_hot_sel_23[3], one_hot_sel_23[2], one_hot_sel_23[1], one_hot_sel_23[0]};
  `ifdef ASSERT_ON
  __xls_invariant_priority_sel_16_selector_one_hot_A: assert final ($isunknown(eq_20) || eq_20) else $fatal(0, "Selector one_hot.15 was expected to be one-hot, and is not.");
  `endif  // ASSERT_ON
endmodule
