module ArrayUpdateWithDifferentTypesIndices(
  input wire [3:0] i0,
  input wire [4:0] i1,
  input wire [191:0] a,
  input wire [31:0] value,
  output wire [191:0] out
);
  wire [31:0] a_unflattened[0:1][0:2];
  assign a_unflattened[0][0] = a[31:0];
  assign a_unflattened[0][1] = a[63:32];
  assign a_unflattened[0][2] = a[95:64];
  assign a_unflattened[1][0] = a[127:96];
  assign a_unflattened[1][1] = a[159:128];
  assign a_unflattened[1][2] = a[191:160];
  wire [31:0] array_update_10[0:1][0:2];
  assign out = {{array_update_10[1][2], array_update_10[1][1], array_update_10[1][0]}, {array_update_10[0][2], array_update_10[0][1], array_update_10[0][0]}};
  genvar array_update_10__index_0;
  genvar array_update_10__index_1;
  generate
    for (array_update_10__index_0 = 0; array_update_10__index_0 < 2; array_update_10__index_0 = array_update_10__index_0 + 1) begin : array_update_10__gen_0
      for (array_update_10__index_1 = 0; array_update_10__index_1 < 3; array_update_10__index_1 = array_update_10__index_1 + 1) begin : array_update_10__gen_1
        assign array_update_10[array_update_10__index_0][array_update_10__index_1] = i0 == array_update_10__index_0 && i1 == array_update_10__index_1 ? value : a_unflattened[array_update_10__index_0][array_update_10__index_1];
      end
    end
  endgenerate
endmodule
