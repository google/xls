// options: {"input_is_dslx": true, "convert_to_ir": true, "optimize_ir": true, "codegen": true, "codegen_args": ["--generator=pipeline", "--pipeline_stages=3"], "simulate": false, "simulator": null}
// args: bits[22]:0x1000
// args: bits[22]:0x155555
// args: bits[22]:0x2000
// args: bits[22]:0x8000
// args: bits[22]:0x2000
// args: bits[22]:0x20
// args: bits[22]:0x80000
// args: bits[22]:0x3fffff
// args: bits[22]:0x3fffff
// args: bits[22]:0x80000
// args: bits[22]:0x23ed85
// args: bits[22]:0x3fffff
// args: bits[22]:0x40000
// args: bits[22]:0x3fffff
// args: bits[22]:0x80
// args: bits[22]:0x40000
// args: bits[22]:0x20
// args: bits[22]:0x2
// args: bits[22]:0x2
// args: bits[22]:0x40000
// args: bits[22]:0x40
// args: bits[22]:0x4000
// args: bits[22]:0x4
// args: bits[22]:0x35b85e
// args: bits[22]:0x40
// args: bits[22]:0x1fffff
// args: bits[22]:0x2c99a8
// args: bits[22]:0x100000
// args: bits[22]:0x100000
// args: bits[22]:0x10000
// args: bits[22]:0x200000
// args: bits[22]:0x10000
// args: bits[22]:0x20
// args: bits[22]:0x4000
// args: bits[22]:0x3031b8
// args: bits[22]:0x0
// args: bits[22]:0x400
// args: bits[22]:0x0
// args: bits[22]:0x8000
// args: bits[22]:0x1000
// args: bits[22]:0x100000
// args: bits[22]:0x2861bb
// args: bits[22]:0x10000
// args: bits[22]:0x40000
// args: bits[22]:0x3ae450
// args: bits[22]:0x20
// args: bits[22]:0x20000
// args: bits[22]:0x2
// args: bits[22]:0x20
// args: bits[22]:0x31fa5e
// args: bits[22]:0x100
// args: bits[22]:0x20
// args: bits[22]:0x10000
// args: bits[22]:0x3fffff
// args: bits[22]:0x10000
// args: bits[22]:0x100000
// args: bits[22]:0x4
// args: bits[22]:0x80
// args: bits[22]:0x19c241
// args: bits[22]:0x4
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x40000
// args: bits[22]:0x10000
// args: bits[22]:0x0
// args: bits[22]:0x400
// args: bits[22]:0x1
// args: bits[22]:0x2
// args: bits[22]:0x2
// args: bits[22]:0x1000
// args: bits[22]:0x40000
// args: bits[22]:0x124bd9
// args: bits[22]:0x40
// args: bits[22]:0x2000
// args: bits[22]:0x200000
// args: bits[22]:0x20000
// args: bits[22]:0x200
// args: bits[22]:0x80000
// args: bits[22]:0x4000
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x400
// args: bits[22]:0x40000
// args: bits[22]:0x8
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x10
// args: bits[22]:0x10
// args: bits[22]:0x400
// args: bits[22]:0x2000
// args: bits[22]:0x100
// args: bits[22]:0x0
// args: bits[22]:0x400
// args: bits[22]:0x10
// args: bits[22]:0x27597b
// args: bits[22]:0x200000
// args: bits[22]:0x20000
// args: bits[22]:0x0
// args: bits[22]:0x100000
// args: bits[22]:0x40
// args: bits[22]:0x80
// args: bits[22]:0x40
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x8
// args: bits[22]:0x8
// args: bits[22]:0x1000
// args: bits[22]:0x0
// args: bits[22]:0x200000
// args: bits[22]:0x1000
// args: bits[22]:0x319c6f
// args: bits[22]:0x40000
// args: bits[22]:0x80000
// args: bits[22]:0x155555
// args: bits[22]:0x3fffff
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x80
// args: bits[22]:0x33f3d
// args: bits[22]:0x800
// args: bits[22]:0x80000
// args: bits[22]:0x10000
// args: bits[22]:0x345847
// args: bits[22]:0x8
// args: bits[22]:0x40000
// args: bits[22]:0x20
// args: bits[22]:0x1
// args: bits[22]:0x80000
// args: bits[22]:0x200000
// args: bits[22]:0x200000
// args: bits[22]:0x1
// args: bits[22]:0x4
// args: bits[22]:0x8
// args: bits[22]:0x100000
// args: bits[22]:0x8
// args: bits[22]:0x200000
// args: bits[22]:0x80
// args: bits[22]:0x80
// args: bits[22]:0x80
// args: bits[22]:0x10
// args: bits[22]:0x4000
// args: bits[22]:0x4
// args: bits[22]:0x2
// args: bits[22]:0x10
// args: bits[22]:0x155555
// args: bits[22]:0x40
// args: bits[22]:0x100
// args: bits[22]:0x40
// args: bits[22]:0x200000
// args: bits[22]:0x388264
// args: bits[22]:0x8
// args: bits[22]:0x1fffff
// args: bits[22]:0x400
// args: bits[22]:0x1b28dc
// args: bits[22]:0x288080
// args: bits[22]:0x8
// args: bits[22]:0x80000
// args: bits[22]:0x2000
// args: bits[22]:0x20000
// args: bits[22]:0x100
// args: bits[22]:0x20000
// args: bits[22]:0x8000
// args: bits[22]:0x200
// args: bits[22]:0x624a4
// args: bits[22]:0x200
// args: bits[22]:0x40000
// args: bits[22]:0x10000
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x800
// args: bits[22]:0x200000
// args: bits[22]:0x400
// args: bits[22]:0x800
// args: bits[22]:0x20
// args: bits[22]:0x800
// args: bits[22]:0x4000
// args: bits[22]:0x1b88c9
// args: bits[22]:0x8000
// args: bits[22]:0x2
// args: bits[22]:0x40000
// args: bits[22]:0x200000
// args: bits[22]:0x8000
// args: bits[22]:0x0
// args: bits[22]:0x3fffff
// args: bits[22]:0x24fcb0
// args: bits[22]:0x20000
// args: bits[22]:0x200000
// args: bits[22]:0x100000
// args: bits[22]:0x200000
// args: bits[22]:0x10000
// args: bits[22]:0x100000
// args: bits[22]:0x2
// args: bits[22]:0x8
// args: bits[22]:0x155555
// args: bits[22]:0x40000
// args: bits[22]:0x20000
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x80000
// args: bits[22]:0x1000
// args: bits[22]:0x2000
// args: bits[22]:0x155555
// args: bits[22]:0x3fffff
// args: bits[22]:0x3fffff
// args: bits[22]:0x800
// args: bits[22]:0x176d55
// args: bits[22]:0x1000
// args: bits[22]:0x800
// args: bits[22]:0x2000
// args: bits[22]:0x200
// args: bits[22]:0x80000
// args: bits[22]:0x800
// args: bits[22]:0x800
// args: bits[22]:0x400
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x40000
// args: bits[22]:0x2
// args: bits[22]:0x31a806
// args: bits[22]:0x40000
// args: bits[22]:0x20
// args: bits[22]:0x80000
// args: bits[22]:0x100000
// args: bits[22]:0x100
// args: bits[22]:0x1
// args: bits[22]:0x10000
// args: bits[22]:0x10
// args: bits[22]:0x800
// args: bits[22]:0x100000
// args: bits[22]:0x80000
// args: bits[22]:0x177d88
// args: bits[22]:0x40
// args: bits[22]:0x181b01
// args: bits[22]:0x200000
// args: bits[22]:0x80
// args: bits[22]:0x800
// args: bits[22]:0x1000
// args: bits[22]:0x80000
// args: bits[22]:0x2
// args: bits[22]:0x8000
// args: bits[22]:0x40000
// args: bits[22]:0x100000
// args: bits[22]:0x2000
// args: bits[22]:0x2783ed
// args: bits[22]:0x4df9
// args: bits[22]:0x8
// args: bits[22]:0x800
// args: bits[22]:0x3ce034
// args: bits[22]:0x100
// args: bits[22]:0x20000
// args: bits[22]:0x8000
// args: bits[22]:0x80000
// args: bits[22]:0x40000
// args: bits[22]:0x20
// args: bits[22]:0x200000
// args: bits[22]:0x3fffff
// args: bits[22]:0x20000
// args: bits[22]:0x20000
// args: bits[22]:0x20
// args: bits[22]:0x1fffff
// args: bits[22]:0x2d8e3
// args: bits[22]:0x100
// args: bits[22]:0x20000
// args: bits[22]:0x100000
// args: bits[22]:0x400
// args: bits[22]:0x4000
// args: bits[22]:0x80000
// args: bits[22]:0x264a3c
// args: bits[22]:0x8000
// args: bits[22]:0x8
// args: bits[22]:0x20000
// args: bits[22]:0x2
// args: bits[22]:0x100000
// args: bits[22]:0x10000
// args: bits[22]:0x800
// args: bits[22]:0x100
// args: bits[22]:0x80000
// args: bits[22]:0x10000
// args: bits[22]:0x20000
// args: bits[22]:0x400
// args: bits[22]:0x1fffff
// args: bits[22]:0x1a59bf
// args: bits[22]:0x155555
// args: bits[22]:0x40
// args: bits[22]:0x0
// args: bits[22]:0x8000
// args: bits[22]:0x3fffff
// args: bits[22]:0x4
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x2000
// args: bits[22]:0x20000
// args: bits[22]:0x8000
// args: bits[22]:0x100
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x2000
// args: bits[22]:0x4000
// args: bits[22]:0x3fffff
// args: bits[22]:0x4
// args: bits[22]:0x300ddf
// args: bits[22]:0x1
// args: bits[22]:0x10
// args: bits[22]:0x10000
// args: bits[22]:0x1fffff
// args: bits[22]:0x100000
// args: bits[22]:0x4
// args: bits[22]:0x199770
// args: bits[22]:0x400
// args: bits[22]:0x235563
// args: bits[22]:0x20000
// args: bits[22]:0x40000
// args: bits[22]:0x100000
// args: bits[22]:0x2e053c
// args: bits[22]:0x20000
// args: bits[22]:0x400
// args: bits[22]:0x1000
// args: bits[22]:0x100000
// args: bits[22]:0x4000
// args: bits[22]:0x100000
// args: bits[22]:0x100000
// args: bits[22]:0x200000
// args: bits[22]:0x367ee4
// args: bits[22]:0x200000
// args: bits[22]:0x4000
// args: bits[22]:0x40
// args: bits[22]:0x80
// args: bits[22]:0x1
// args: bits[22]:0x7ffed
// args: bits[22]:0x100
// args: bits[22]:0x40
// args: bits[22]:0x69049
// args: bits[22]:0x8
// args: bits[22]:0x0
// args: bits[22]:0x100000
// args: bits[22]:0x20
// args: bits[22]:0x40
// args: bits[22]:0x0
// args: bits[22]:0x100
// args: bits[22]:0x10
// args: bits[22]:0x200000
// args: bits[22]:0x8
// args: bits[22]:0x3fffff
// args: bits[22]:0x40
// args: bits[22]:0x8
// args: bits[22]:0x200000
// args: bits[22]:0x8000
// args: bits[22]:0x200
// args: bits[22]:0x20000
// args: bits[22]:0x20000
// args: bits[22]:0x100000
// args: bits[22]:0x8000
// args: bits[22]:0x8000
// args: bits[22]:0x2000
// args: bits[22]:0x800
// args: bits[22]:0x200
// args: bits[22]:0x30e7da
// args: bits[22]:0x1
// args: bits[22]:0x80
// args: bits[22]:0x1fffff
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x8
// args: bits[22]:0x10000
// args: bits[22]:0x4000
// args: bits[22]:0x200000
// args: bits[22]:0x800
// args: bits[22]:0x0
// args: bits[22]:0x0
// args: bits[22]:0x40
// args: bits[22]:0x2000
// args: bits[22]:0x8000
// args: bits[22]:0x4
// args: bits[22]:0x3fffff
// args: bits[22]:0x100
// args: bits[22]:0x100000
// args: bits[22]:0x20
// args: bits[22]:0x400
// args: bits[22]:0x200
// args: bits[22]:0x4
// args: bits[22]:0x80000
// args: bits[22]:0x2
// args: bits[22]:0x4
// args: bits[22]:0x200
// args: bits[22]:0x1
// args: bits[22]:0x80000
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x155555
// args: bits[22]:0x155555
// args: bits[22]:0x100
// args: bits[22]:0x155555
// args: bits[22]:0x200000
// args: bits[22]:0x1000
// args: bits[22]:0x1fffff
// args: bits[22]:0x200
// args: bits[22]:0x200
// args: bits[22]:0x8
// args: bits[22]:0x200000
// args: bits[22]:0x80
// args: bits[22]:0x10
// args: bits[22]:0x100000
// args: bits[22]:0x10
// args: bits[22]:0x0
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x4000
// args: bits[22]:0x100
// args: bits[22]:0x1
// args: bits[22]:0x100000
// args: bits[22]:0x10000
// args: bits[22]:0x10
// args: bits[22]:0x1000
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x1
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x0
// args: bits[22]:0x1fffff
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x0
// args: bits[22]:0x400
// args: bits[22]:0x4
// args: bits[22]:0x2000
// args: bits[22]:0x100
// args: bits[22]:0x8000
// args: bits[22]:0x200
// args: bits[22]:0x800
// args: bits[22]:0x100000
// args: bits[22]:0x4000
// args: bits[22]:0x200
// args: bits[22]:0x20000
// args: bits[22]:0x10
// args: bits[22]:0x4000
// args: bits[22]:0x3fffff
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x20
// args: bits[22]:0x1
// args: bits[22]:0x200
// args: bits[22]:0xdd4c6
// args: bits[22]:0x200000
// args: bits[22]:0x3fffff
// args: bits[22]:0x80000
// args: bits[22]:0x20
// args: bits[22]:0x2
// args: bits[22]:0x0
// args: bits[22]:0x10000
// args: bits[22]:0x40
// args: bits[22]:0x3fffff
// args: bits[22]:0x1000
// args: bits[22]:0x4
// args: bits[22]:0x80
// args: bits[22]:0x200
// args: bits[22]:0x200
// args: bits[22]:0x1fffff
// args: bits[22]:0x40000
// args: bits[22]:0x2
// args: bits[22]:0x8
// args: bits[22]:0x2
// args: bits[22]:0x2
// args: bits[22]:0x155555
// args: bits[22]:0x3fffff
// args: bits[22]:0x400
// args: bits[22]:0x100
// args: bits[22]:0x10723b
// args: bits[22]:0x80000
// args: bits[22]:0x400
// args: bits[22]:0x3302c1
// args: bits[22]:0x800
// args: bits[22]:0x1000
// args: bits[22]:0x2000
// args: bits[22]:0x800
// args: bits[22]:0x8
// args: bits[22]:0x1000
// args: bits[22]:0x1c4126
// args: bits[22]:0x200
// args: bits[22]:0x80000
// args: bits[22]:0x8
// args: bits[22]:0x4000
// args: bits[22]:0x80000
// args: bits[22]:0x4000
// args: bits[22]:0x3fffff
// args: bits[22]:0x40
// args: bits[22]:0x1991eb
// args: bits[22]:0x155555
// args: bits[22]:0x100000
// args: bits[22]:0x10000
// args: bits[22]:0xe4981
// args: bits[22]:0x10
// args: bits[22]:0x19913c
// args: bits[22]:0x16bcda
// args: bits[22]:0x40000
// args: bits[22]:0x3fffff
// args: bits[22]:0x20000
// args: bits[22]:0x40000
// args: bits[22]:0x3fffff
// args: bits[22]:0x4
// args: bits[22]:0x1
// args: bits[22]:0x2aaaaa
// args: bits[22]:0x400
// args: bits[22]:0x8000
// args: bits[22]:0x100000
// args: bits[22]:0x10
// args: bits[22]:0x2
// args: bits[22]:0x100000
// args: bits[22]:0x1fffff
// args: bits[22]:0x2000
// args: bits[22]:0x4
// args: bits[22]:0x3fffff
// args: bits[22]:0x155555
// args: bits[22]:0x200000
// args: bits[22]:0x3a5716
// args: bits[22]:0x3fffff
// args: bits[22]:0x1afc83
// args: bits[22]:0x400
// args: bits[22]:0x155555
// args: bits[22]:0x2
// args: bits[22]:0x1000
// args: bits[22]:0x10
// args: bits[22]:0x8000
// args: bits[22]:0x3fffff
// args: bits[22]:0x1000
// args: bits[22]:0x80000
// args: bits[22]:0x1
// args: bits[22]:0x0
fn main(x9043: u22) -> (u22, u45, u3, u1, u12, u22, u22, u3, u1, u3, u23, u22, u5, u3, u5, u22, u1, u1, u22, u45, u22, u22, u3, (u3), u22, u22, u3, (u12, u22, u3, u3, (u3), u3, u50, u3, u27, u1, u3), u22, u22, u12, u22) {
    let x9044: u22 = x9043 in
    let x9045: u3 = (u3:0x5) in
    let x9046: (u3) = (x9045,) in
    let x9047: u50 = (((x9045) ++ (x9043)) ++ (x9044)) ++ (x9045) in
    let x9048: u3 = (x9046)[(u32:0x0)] in
    let x9049: u22 = clz(x9044) in
    let x9050: u22 = (x9043) * ((x9048 as u22)) in
    let x9051: u3 = (x9046)[(u32:0x0)] in
    let x9052: u22 = -(x9044) in
    let x9053: u22 = ((x9048 as u22)) & (x9052) in
    let x9054: u22 = x9044 in
    let x9055: u1 = ((x9047) != ((u50:0x0))) && ((x9048) != ((u3:0x0))) in
    let x9056: u45 = ((x9050) ++ (x9055)) ++ (x9044) in
    let x9057: u23 = one_hot(x9054, (u1:1)) in
    let x9058: u22 = clz(x9044) in
    let x9059: u12 = (u12:0x0) in
    let x9060: u45 = clz(x9056) in
    let x9061: u23 = one_hot_sel(x9048, [x9057, x9057, x9057]) in
    let x9062: u3 = (x9046)[(u32:0x0)] in
    let x9063: u12 = -(x9059) in
    let x9064: u3 = one_hot_sel(x9062, [x9062, x9045, x9051]) in
    let x9065: u1 = ((x9051) != ((u3:0x0))) ^ ((x9057) != ((u23:0x0))) in
    let x9066: u3 = !(x9064) in
    let x9067: u37 = (u37:0x8000) in
    let x9068: u27 = (u27:0x400) in
    let x9069: u58 = (((x9065) ++ (x9058)) ++ (x9059)) ++ (x9057) in
    let x9070: u5 = (u5:0x0) in
    let x9071: u3 = !(x9045) in
    let x9072: u43 = ((x9067) ++ (x9051)) ++ (x9062) in
    let x9073: (u12, u22, u3, u3, (u3), u3, u50, u3, u27, u1, u3) = (x9059, x9049, x9071, x9066, x9046, x9045, x9047, x9066, x9068, x9055, x9045) in
    let x9074: u26 = ((x9062) ++ (x9055)) ++ (x9044) in
    (x9053, x9056, x9051, x9055, x9063, x9054, x9052, x9045, x9055, x9045, x9057, x9043, x9070, x9071, x9070, x9058, x9065, x9055, x9043, x9056, x9052, x9043, x9048, x9046, x9043, x9058, x9062, x9073, x9053, x9058, x9063, x9044)
}


