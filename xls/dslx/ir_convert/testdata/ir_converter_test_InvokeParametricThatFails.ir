package test_module

file_number 0 "test_module.x"

fn __itok__test_module__does_fail__32(__token: token, __activated: bits[1]) -> (token, bits[32]) {
  not.6: bits[1] = not(__activated, id=6)
  assert.7: token = assert(__token, not.6, message="Assertion failure via fail! @ test_module.x:3:8-3:31", id=7)
  literal.5: bits[32] = literal(value=42, id=5)
  after_all.9: token = after_all(assert.7, id=9)
  identity.8: bits[32] = identity(literal.5, id=8)
  N: bits[32] = literal(value=32, id=3)
  literal.4: bits[8][7] = literal(value=[102, 97, 105, 108, 117, 114, 101], id=4)
  ret tuple.10: (token, bits[32]) = tuple(after_all.9, identity.8, id=10)
}

fn __itok__test_module__main(__token: token, __activated: bits[1], x: bits[32]) -> (token, bits[32]) {
  invoke.14: (token, bits[32]) = invoke(__token, __activated, to_apply=__itok__test_module__does_fail__32, id=14)
  tuple_index.15: token = tuple_index(invoke.14, index=0, id=15)
  after_all.17: token = after_all(tuple_index.15, id=17)
  tuple_index.16: bits[32] = tuple_index(invoke.14, index=1, id=16)
  ret tuple.18: (token, bits[32]) = tuple(after_all.17, tuple_index.16, id=18)
}
