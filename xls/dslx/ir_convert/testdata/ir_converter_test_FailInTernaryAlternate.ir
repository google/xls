package test_module

file_number 0 "test_module.x"

fn __itok__test_module__main(__token: token, __activated: bits[1], x: bits[32]) -> (token, bits[32]) {
  literal.4: bits[32] = literal(value=0, id=4)
  eq.5: bits[1] = eq(x, literal.4, id=5)
  not.7: bits[1] = not(eq.5, id=7)
  and.8: bits[1] = and(__activated, not.7, id=8)
  not.9: bits[1] = not(and.8, id=9)
  assert.10: token = assert(__token, not.9, message="Assertion failure via fail! @ test_module.x:3:35-3:49", id=10)
  identity.11: bits[32] = identity(x, id=11)
  after_all.13: token = after_all(assert.10, id=13)
  sel.12: bits[32] = sel(eq.5, cases=[identity.11, x], id=12)
  literal.6: bits[8][7] = literal(value=[102, 97, 105, 108, 117, 114, 101], id=6)
  ret tuple.14: (token, bits[32]) = tuple(after_all.13, sel.12, id=14)
}

fn __test_module__main(x: bits[32]) -> bits[32] {
  after_all.16: token = after_all(id=16)
  literal.17: bits[1] = literal(value=1, id=17)
  invoke.18: (token, bits[32]) = invoke(after_all.16, literal.17, x, to_apply=__itok__test_module__main, id=18)
  ret tuple_index.19: bits[32] = tuple_index(invoke.18, index=1, id=19)
}
