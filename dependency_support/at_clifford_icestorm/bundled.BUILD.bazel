# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# BUILD file for Project Icestorm.
#
# iceprog is not included in this BUILD file because it depends on libftdi which
# is not available at this time.

load("@com_google_xls//dependency_support:copy.bzl", "copy")

licenses(["notice"])

exports_files([
    "LICENSE",
    "icefuzz/timings_hx1k.txt",
    "icefuzz/timings_hx8k.txt",
    "icefuzz/timings_lp1k.txt",
    "icefuzz/timings_lp8k.txt",
    "icefuzz/timings_lp384.txt",
    "icefuzz/timings_u4k.txt",
    "icefuzz/timings_up5k.txt",
])

ICE40_DEVICES = {
    "384": "-3",
    "1k": "",
    "5k": "-5",
    "u4k": "-u",
    "lm4k": "-4",
    "8k": "-8",
}

py_binary(
    name = "icebox_chipdb",
    srcs = [
        "icebox/icebox.py",
        "icebox/icebox_chipdb.py",
        "icebox/iceboxdb.py",
    ],
    python_version = "PY3",
)

[genrule(
    name = "chipdb_%s_txt" % device,
    srcs = [],
    outs = ["chipdb-%s.txt" % device],
    cmd = "$(location :icebox_chipdb) %s > $@" % ICE40_DEVICES[device],
    exec_tools = [":icebox_chipdb"],
    visibility = ["//visibility:public"],
) for device in ICE40_DEVICES.keys()]

cc_binary(
    name = "icebram",
    srcs = ["icebram/icebram.cc"],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "icemulti",
    srcs = ["icemulti/icemulti.cc"],
    copts = [
        "-Wno-implicit-fallthrough",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "icepack",
    srcs = ["icepack/icepack.cc"],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "icepll",
    srcs = ["icepll/icepll.cc"],
    visibility = ["//visibility:public"],
)

CHIPS = [
    "lp384",
    "lp1k",
    "lp8k",
    "hx1k",
    "hx8k",
    "up5k",
]

genrule(
    name = "iceutil_renamed_find_chipdb",
    srcs = ["icetime/iceutil.cc"],
    outs = ["generated/iceutil_renamed_find_chipdb.cc"],
    cmd = "cat $(SRCS) | sed 's/find_chipdb/find_chipdb_renamed_to_be_replaced/g' > $@",
)

copy(
    name = "bazel_find_chipdb_cc",
    src = "@com_google_xls//dependency_support/at_clifford_icestorm:bazel_find_chipdb.cc",
    out = "bazel_find_chipdb.cc",
)

cc_binary(
    name = "icetime",
    srcs = [
        "icetime/icetime.cc",
        "generated/iceutil_renamed_find_chipdb.cc",
        "bazel_find_chipdb.cc",
    ] + ["generated/timings_%s.cc" % chip for chip in CHIPS],
    copts = [
        "-Wno-string-plus-int",
    ],
    data = ["chipdb-%s.txt" % device for device in ICE40_DEVICES],
    defines = [
        "PREFIX=\\\"unspecified\\\"",
        "CHIPDB_SUBDIR=\\\"unspecified\\\"",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@com_google_absl//absl/strings",
    ],
)

py_binary(
    name = "timings",
    srcs = ["icetime/timings.py"],
    python_version = "PY3",
)

[genrule(
    name = "timings_%s_cc" % chip,
    srcs = ["icefuzz/timings_%s.txt" % chip],
    outs = ["generated/timings_%s.cc" % chip],
    cmd = "(dir=$$(pwd) && cd $$(dirname $(location :icefuzz/timings_%s.txt)) && $$dir/$(location :timings) %s) > $@" % (chip, chip),
    exec_tools = [":timings"],
) for chip in CHIPS]
